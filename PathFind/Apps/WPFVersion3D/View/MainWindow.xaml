<Window x:Name="Window" 
        x:Class="WPFVersion3D.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:converters="clr-namespace:WPFVersion3D.Converters" 
        xmlns:model="clr-namespace:WPFVersion3D.Model"
        xmlns:range="clr-namespace:WPFVersion3D"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" 
        xmlns:validationrules="clr-namespace:WPFVersion3D.ValidationRules"
        mc:Ignorable="d"
        Title="3D pathfinding" 
        Height="350" 
        Width="450">
    <Window.Resources>
        <converters:InvertPointConverter x:Key="invertPointConverter"/>
        <converters:PointToNumberConverter x:Key="coordinateToDistance"/>
        <converters:PrecisedDoubleToStringConverter Precision="2" x:Key="doubleConverter2"/>
        <converters:AnimatedAxisRotatorConverter x:Key="animatedAxisRotatorConverter"/>

        <Style TargetType="TextBox" x:Key="TextBoxStyle">
            <Setter Property="MinWidth" Value="40"></Setter>
            <Setter Property="Margin" Value="5"></Setter>
        </Style>
        <Style TargetType="Slider" x:Key="SliderStyle">
            <Setter Property="MinWidth" Value="100"></Setter>
            <Setter Property="Margin" Value="5"></Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="auto"/>
        </Grid.ColumnDefinitions>
        <Expander Grid.Column="1" Grid.RowSpan="4">
            <Grid>
                
                <Grid.ColumnDefinitions>
                    <ColumnDefinition></ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"></RowDefinition>
                    <RowDefinition Height="auto"></RowDefinition>
                    <RowDefinition Height="auto"></RowDefinition>
                    <RowDefinition Height="auto"></RowDefinition>
                    <RowDefinition Height="auto"></RowDefinition>
                    <RowDefinition Height="auto"></RowDefinition>
                    <RowDefinition Height="auto"></RowDefinition>
                    <RowDefinition Height="auto"></RowDefinition>
                </Grid.RowDefinitions>

                <ToggleButton Command="{Binding AnimatedAxisRotateCommand}"
                              CommandParameter="{Binding IsChecked, RelativeSource = {RelativeSource Self},
                              Converter={StaticResource animatedAxisRotatorConverter}, 
                              ConverterParameter= {x:Reference Name=xAxis}}" 
                              Margin="5" Grid.Column="3" Grid.Row="1"
                              Template ="{StaticResource RotationToggleButtonTemplate}"/>

                <ToggleButton Command="{Binding AnimatedAxisRotateCommand}"
                              CommandParameter="{Binding IsChecked, RelativeSource = {RelativeSource Self},
                              Converter={StaticResource animatedAxisRotatorConverter}, 
                              ConverterParameter= {x:Reference Name=yAxis}}" 
                              Margin="5" Grid.Column="3" Grid.Row="2"
                              Template ="{StaticResource RotationToggleButtonTemplate}"/>

                <ToggleButton Command="{Binding AnimatedAxisRotateCommand}"
                              CommandParameter="{Binding IsChecked, RelativeSource = {RelativeSource Self},
                              Converter={StaticResource animatedAxisRotatorConverter},
                              ConverterParameter= {x:Reference Name=zAxis}}" 
                              Margin="5" Grid.Column="3" Grid.Row="3"
                              Template ="{StaticResource RotationToggleButtonTemplate}"/>

                <TextBlock Margin="5" Text="Zoom"/>
                <TextBlock Grid.Row="1" Margin="5" Text="X axis rotate"/>
                <TextBlock Grid.Row="2" Margin="5" Text="Y axis rotate"/>
                <TextBlock Grid.Row="3" Margin="5" Text="Z axis rotate"/>
                <TextBlock Grid.ColumnSpan="3" HorizontalAlignment="Center" 
                           Grid.Row="4" Margin="5" Text="Distance between vertices"/>

                <TextBox Style="{StaticResource TextBoxStyle}" 
                         Grid.Column="2" 
                         Grid.Row="0">
                    <TextBox.Text>
                        <Binding Path="Value" 
                                 ElementName="zoomSlider" 
                                 Converter="{StaticResource doubleConverter2}"
                                 Mode="TwoWay"
                                 UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <validationrules:NonInt32InputValidationRule/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>

                <TextBlock Grid.Row="5" Margin="5" Text="X axis"/>
                <TextBlock Grid.Row="6" Margin="5" Text="Y axis"/>
                <TextBlock Grid.Row="7" Margin="5" Text="Z axis"/>

                <TextBox Style="{StaticResource TextBoxStyle}" 
                         Grid.Column="2" 
                         Grid.Row="1">
                    <TextBox.Text>
                        <Binding Path="Value" 
                                 ElementName="xAxisSlider" 
                                 Converter="{StaticResource doubleConverter2}"
                                 Mode="TwoWay">
                            <Binding.ValidationRules>
                                <validationrules:NonDoubleInputValidationRule/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>

                <TextBox Style="{StaticResource TextBoxStyle}" 
                         Grid.Column="2" 
                         Grid.Row="2"                          >
                    <TextBox.Text>
                        <Binding Path="Value" 
                                 ElementName="yAxisSlider" 
                                 Converter="{StaticResource doubleConverter2}"
                                 Mode="TwoWay">
                            <Binding.ValidationRules>
                                <validationrules:NonDoubleInputValidationRule/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>

                <TextBox Style="{StaticResource TextBoxStyle}" 
                         Grid.Column="2" 
                         Grid.Row="3">
                    <TextBox.Text>
                        <Binding Path="Value" 
                                 ElementName="zAxisSlider" 
                                 Converter="{StaticResource doubleConverter2}"
                                 Mode="TwoWay">
                            <Binding.ValidationRules>
                                <validationrules:NonDoubleInputValidationRule/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>

                <model:RangedSlider x:Name="zoomSlider" 
                                    Grid.Column="1" 
                        Style="{StaticResource SliderStyle}" 
                        ValueRange="{x:Static range:Constants.ZoomValueRange}" Grid.Row="0" 
                        Value="{Binding ElementName=camera,     
                                Path=Position, 
                                Converter={StaticResource coordinateToDistance}}"/>

                <model:RangedSlider x:Name="xAxisSlider" Grid.Column="1" 
                        Style="{StaticResource SliderStyle}" 
                        ValueRange="{x:Static range:Constants.AngleValueRange}" 
                        Grid.Row="1" 
                        Value="{Binding ElementName=xAxis, Path=Angle}"/>

                <model:RangedSlider x:Name="yAxisSlider" Grid.Column="1" 
                        Style="{StaticResource SliderStyle}" 
                        ValueRange="{x:Static range:Constants.AngleValueRange}" 
                        Grid.Row="2" 
                        Value="{Binding ElementName=yAxis, Path=Angle}"/>

                <model:RangedSlider x:Name="zAxisSlider" Grid.Column="1" 
                        Style="{StaticResource SliderStyle}" 
                        ValueRange="{x:Static range:Constants.AngleValueRange}" 
                        Grid.Row="3" 
                        Value="{Binding ElementName=zAxis, Path=Angle}"/>

                <TextBox Style="{StaticResource TextBoxStyle}" 
                         Grid.Column="2" 
                         Grid.Row="5">
                    <TextBox.Text>
                        <Binding Path="Value" 
                                 ElementName="xAxisStretchAxis" 
                                 Converter="{StaticResource doubleConverter2}"
                                 Mode="TwoWay">
                            <Binding.ValidationRules>
                                <validationrules:NonDoubleInputValidationRule/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>

                <TextBox Style="{StaticResource TextBoxStyle}" 
                         Grid.Column="2" 
                         Grid.Row="6">
                    <TextBox.Text>
                        <Binding Path="Value" 
                                 ElementName="yAxisStretchSlider" 
                                 Converter="{StaticResource doubleConverter2}"
                                 Mode="TwoWay">
                            <Binding.ValidationRules>
                                <validationrules:NonDoubleInputValidationRule/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>

                <TextBox Style="{StaticResource TextBoxStyle}" 
                         Grid.Column="2" 
                         Grid.Row="7">
                    <TextBox.Text>
                        <Binding Path="Value" 
                                 ElementName="zAxisStretchSlider" 
                                 Converter="{StaticResource doubleConverter2}"
                                 Mode="TwoWay">
                            <Binding.ValidationRules>
                                <validationrules:NonDoubleInputValidationRule/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                
                <model:RangedSlider x:Name="xAxisStretchAxis" 
                                    Grid.Column="1" 
                                    Style="{StaticResource SliderStyle}"
                                    ValueRange="{x:Static range:Constants.DistanceBetweenVerticesValueRange}" 
                                    Grid.Row="5">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="ValueChanged">
                            <ei:CallMethodAction TargetObject="{Binding Path=DataContext, ElementName=Window}" 
                                                 MethodName="StretchAlongXAxis"></ei:CallMethodAction>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </model:RangedSlider>

                <model:RangedSlider x:Name="yAxisStretchSlider" 
                                    Grid.Column="1" 
                                    Style="{StaticResource SliderStyle}" 
                                    ValueRange="{x:Static range:Constants.DistanceBetweenVerticesValueRange}" 
                                    Grid.Row="6">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="ValueChanged">
                            <ei:CallMethodAction TargetObject="{Binding Path=DataContext, ElementName=Window}" 
                                                 MethodName="StretchAlongYAxis"></ei:CallMethodAction>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </model:RangedSlider>

                <model:RangedSlider x:Name="zAxisStretchSlider"  
                                    Grid.Column="1" 
                                    Style="{StaticResource SliderStyle}" 
                                    ValueRange="{x:Static range:Constants.DistanceBetweenVerticesValueRange}"
                                    Grid.Row="7">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="ValueChanged">
                            <ei:CallMethodAction TargetObject="{Binding Path=DataContext, ElementName=Window}" 
                                                 MethodName="StretchAlongZAxis"></ei:CallMethodAction>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </model:RangedSlider>

            </Grid>
        </Expander>
        <ToolBar Grid.Row="0">
            <Button Command="{Binding LoadGraphCommand}">
                <Image Style ="{StaticResource ImageStyle}" Source="/Resources/Images/open.png"/>
            </Button>
            <Button Command="{Binding SaveGraphCommand}">
                <Image Style ="{StaticResource ImageStyle}" Source="/Resources/Images/save.png"/>
            </Button>
            <Button Command="{Binding CreateNewGraphCommand}">
                <Image Style ="{StaticResource ImageStyle}" Source="/Resources/Images/new.png"/>
            </Button>
            <Button Command="{Binding ClearGraphCommand}">
                <Image Style ="{StaticResource ImageStyle}" Source="/Resources/Images/clear.png"/>
            </Button>
            <Button Command ="{Binding StartPathFindCommand}">
                <Image Style ="{StaticResource ImageStyle}" Source="/Resources/Images/start.png"/>
            </Button>
            <Button Command ="{Binding ChangeOpacityCommand}">
                <Image Style ="{StaticResource ImageStyle}" Source="/Resources/Images/opacity.png"/>
            </Button>
        </ToolBar>
        <Viewport3D Grid.Row="2" Margin="5" Grid.RowSpan="2">
            <Viewport3D.Camera>
                <PerspectiveCamera x:Name="camera" 
                    LookDirection="{Binding RelativeSource={RelativeSource Self}, 
                                    Path=Position, 
                                    Converter={StaticResource invertPointConverter}}" 
                    Position="600,600,600"/>
            </Viewport3D.Camera>
            <Viewport3D.Children>
                <model:GraphField3DContainer GraphField="{Binding GraphField, UpdateSourceTrigger=PropertyChanged}">
                    <ModelVisual3D.Content>
                        <DirectionalLight Direction="{Binding ElementName=camera, Path=LookDirection}" 
                                          Color="White"/>
                    </ModelVisual3D.Content>
                    <ModelVisual3D.Transform>
                        <Transform3DGroup>
                            <RotateTransform3D>
                                <RotateTransform3D.Rotation>
                                    <AxisAngleRotation3D x:Name="xAxis" Axis="1 0 0"/>
                                </RotateTransform3D.Rotation>
                            </RotateTransform3D>
                            <RotateTransform3D>
                                <RotateTransform3D.Rotation>
                                    <AxisAngleRotation3D x:Name="yAxis" Axis="0 1 0"/>
                                </RotateTransform3D.Rotation>
                            </RotateTransform3D>
                            <RotateTransform3D>
                                <RotateTransform3D.Rotation>
                                    <AxisAngleRotation3D x:Name="zAxis" Axis="0 0 1"/>
                                </RotateTransform3D.Rotation>
                            </RotateTransform3D>
                        </Transform3DGroup>
                    </ModelVisual3D.Transform>
                </model:GraphField3DContainer>
            </Viewport3D.Children>
        </Viewport3D>
        <StatusBar Grid.Row="3">
            <TextBlock Text = "{Binding PathFindingStatistics}"/>
        </StatusBar>
        <StatusBar Grid.Row="1">
            <TextBlock Text="{Binding GraphParametres}"/>
        </StatusBar>
    </Grid>
</Window>
